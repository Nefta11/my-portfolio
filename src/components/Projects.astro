---
import PhpIcon from "../components/Icons/PhpIcon.astro";
import HtmlIcon from "../components/Icons/HtmlIcon.astro";
import JavaScriptIcon from "../components/Icons/JavaScriptIcon.astro";
import CssIcon from "./Icons/CssIcon.astro";
import MysqlIcon from "./Icons/MysqlIcon.astro";
import ReactIcon from "./Icons/ReactIcon.astro";
import ExpoIcon from "./Icons/ExpoIcon.astro";
import PostmanIcon from "./Icons/PostmanIcon.astro";
import NodeIcon from "../components/Icons/NodeIcon.astro";
import StripeIcon from "../components/Icons/StripeIcon.astro";

const TAGS = {
  Php: {
    name: "PHP",
    class:
      "bg-gradient-to-r from-indigo-400/40 via-purple-500/40 to-indigo-700/40 text-white",
    icon: PhpIcon,
  },
  Html: {
    name: "HTML",
    class: "bg-gradient-to-r from-orange-400/40 to-red-600/40 text-white",
    icon: HtmlIcon,
  },
  JavaScript: {
    name: "JavaScript",
    class: "bg-gradient-to-r from-yellow-400/40 to-yellow-600/40 text-white",
    icon: JavaScriptIcon,
  },
  css: {
    name: "CSS",
    class:
      "bg-gradient-to-r from-blue-400/40 via-blue-500/40 to-blue-700/40 text-white",
    icon: CssIcon,
  },
  Mysql: {
    name: "MySQL",
    class: "bg-gradient-to-r from-cyan-500/40 to-blue-800/40 text-white",
    icon: MysqlIcon,
  },
  react: {
    name: "React Native",
    class:
      "bg-gradient-to-r from-blue-400/40 via-cyan-500/40 to-teal-400/40 text-white",
    icon: ReactIcon,
  },
  Expo: {
    name: "Expo",
    class:
      "bg-gradient-to-r from-purple-500/40 via-indigo-600/40 to-indigo-800/40 text-white",
    icon: ExpoIcon,
  },
  Postman: {
    name: "Postman",
    class:
      "bg-gradient-to-r from-orange-400/40 via-orange-500/40 to-red-500/40 text-white",
    icon: PostmanIcon,
  },
  Node: {
    name: "Node.js",
    class:
      "bg-gradient-to-r from-green-400/40 via-green-500/40 to-green-700/40 text-white",
    icon: NodeIcon,
  },
  Stripe: {
    name: "Stripe",
    class:
      "bg-gradient-to-r from-indigo-400/40 via-blue-500/40 to-purple-600/40 text-white",
    icon: StripeIcon,
  },
};




const PROJECTS = [
  {
    title: "Ultra Trail(Modulo Boletos)",
    description:"Desarrollo del módulo de métodos de pago y compra de boletos para la aplicación Ultra Trail, enfocada en carreras de montaña. Maqueté y desarrollé interfaces en React Native ejecutadas en Expo, creando pantallas para métodos de pago, compra de boletos, carrito de compras y visualización de boletos. Stripe fue implementado para la gestión segura de pagos. Node.js se utilizó para la configuración del entorno y ejecución del código JavaScript en React. Además, desarrollé y consumí APIs con Slim PHP para manejar transacciones y la gestión de boletos, utilizando MySQL para el almacenamiento de datos.",
    link: "https://web.dragonball-api.com/",
    github: "https://github.com/eiberham/dragonball",
    image: "https://raw.githubusercontent.com/Nefta11/my-portfolio/main/public/images/projects/UltraTrail.png",
    tags: [TAGS.Node, TAGS.react, TAGS.Mysql,TAGS.Stripe, TAGS.Expo, TAGS.Postman],
  },
  {
    title: "Gran Bazar",
    description:
      "Desarrollé esta aplicación web como parte de un proyecto integrador universitario, utilizando tecnologías como PHP, HTML, CSS, JavaScript y MySQL para el desarrollo tanto del frontend como del backend, sin el uso de frameworks. Además, diseñé y configuré la base de datos, incorporando procedimientos almacenados, funciones y vistas para la simulación y gestión de los datos. La aplicación incluye funcionalidades clave como el registro y acceso de usuarios, un carrito de compras para la visualización de productos seleccionados, y la opción de cerrar sesión de manera segura",
    link: "https://web.dragonball-api.com/",
    github: "https://github.com/eiberham/dragonball",
    image:
      "https://raw.githubusercontent.com/Nefta11/my-portfolio/main/public/images/projects/GranBazar.png",
    tags: [TAGS.Php, TAGS.Html, TAGS.JavaScript, TAGS.css, TAGS.Mysql],
  },
];
---

{
  PROJECTS.map(({ image, title, description, tags }) => (
    <article>
      <h3 class="text-2xl font-semibold text-violet-500 mb-2">{title}</h3>
      <p class="text-lg mb-4 text-pretty">{description}</p>
      <ul class="flex gap-x-2 flex-row mb-2">
        {tags.map((tag) => (
          <li>
            <span
              class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2.5`}
            >
              <tag.icon class="size-4" />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
      <img
        class="rounded shadow-2xl shadow-white/10"
        src={image}
        alt={`Captura de pantalla del proyecto ${image}`}
      />
    </article>
  ))
}
