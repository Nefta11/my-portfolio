---
import PhpIcon from "@/components/Icons/PhpIcon.astro";
import HtmlIcon from "@/components/Icons/HtmlIcon.astro";
import JavaScriptIcon from "@/components/Icons/JavaScriptIcon.astro";
import MysqlIcon from "@/components/Icons/MysqlIcon.astro";
import ReactIcon from "@/components/Icons/ReactIcon.astro";
import ExpoIcon from "@/components/Icons/ExpoIcon.astro";
import PostmanIcon from "@/components/Icons/PostmanIcon.astro";
import NodeIcon from "@/components/Icons/NodeIcon.astro";
import StripeIcon from "@/components/Icons/StripeIcon.astro";
import SlimPHPIcon from "@/components/Icons/SlimIcon.astro";
import LinkButton from "@/components/LinkButton.astro";
import GitHubIcon from "@/components/Icons/GitHubIcon.astro";
import LinkIcon from "@/components/Icons/LinkIcon.astro";
import IconoDeCss from "./Icons/IconoDeCss.astro";
const TAGS = {
  Php: {
    name: "PHP",
    class:
      "bg-gradient-to-r from-indigo-400/40 via-purple-500/40 to-indigo-700/40 text-white",
    icon: PhpIcon,
  },
  Html: {
    name: "HTML",
    class: "bg-gradient-to-r from-orange-400/40 to-red-600/40 text-white",
    icon: HtmlIcon,
  },
  JavaScript: {
    name: "JavaScript",
    class: "bg-gradient-to-r from-yellow-400/40 to-yellow-600/40 text-white",
    icon: JavaScriptIcon,
  },
  css: {
    name: "CSS",
    class:
      "bg-gradient-to-r from-blue-400/40 via-blue-500/40 to-blue-700/40 text-white",
    icon: IconoDeCss,
  },
  Mysql: {
    name: "MySQL",
    class: "bg-gradient-to-r from-gray-800 via-gray-700 to-gray-600 text-white",
    icon: MysqlIcon,
  },
  react: {
    name: "React Native",
    class:
      "bg-gradient-to-r from-blue-400/40 via-cyan-500/40 to-teal-400/40 text-white",
    icon: ReactIcon,
  },
  Expo: {
    name: "Expo",
    class: "bg-gradient-to-r from-gray-300 via-gray-400 to-gray-600 text-white",
    icon: ExpoIcon,
  },
  Postman: {
    name: "Postman",
    class:
      "bg-gradient-to-r from-orange-400/40 via-orange-500/40 to-red-500/40 text-white",
    icon: PostmanIcon,
  },
  Node: {
    name: "Node.js",
    class:
      "bg-gradient-to-r from-green-400/40 via-green-500/40 to-green-700/40 text-white",
    icon: NodeIcon,
  },
  Stripe: {
    name: "Stripe",
    class:
      "bg-gradient-to-r from-indigo-400/40 via-blue-500/40 to-purple-600/40 text-white",
    icon: StripeIcon,
  },
  SlimPHP: {
    name: "Slim PHP",
    class: "bg-gradient-to-r from-gray-800 via-gray-700 to-gray-600 text-white",
    icon: SlimPHPIcon,
  },
};

const PROJECTS = [
  {
    title: "Ultra Trail(Modulo Boletos)",
    description:
      "Desarrollo del módulo de métodos de pago y compra de boletos para la aplicación Ultra Trail, enfocada en carreras de montaña. Maqueté y desarrollé interfaces en React Native ejecutadas en Expo, creando pantallas para métodos de pago, compra de boletos, carrito de compras y visualización de boletos. Stripe fue implementado para la gestión segura de pagos. Node.js se utilizó para la configuración del entorno y ejecución del código JavaScript en React. Desarrollé y consumí APIs con Slim PHP para manejar transacciones y la gestión de boletos, utilizando MySQL para el almacenamiento de datos. Postman se utilizó para la prueba y documentación de las APIs creadas, asegurando su correcto funcionamiento y facilitando la integración del backend con el frontend.",
    github: "https://github.com/UltraHuauchi?tab=repositories",
    image:
      "https://raw.githubusercontent.com/Nefta11/my-portfolio/main/public/images/projects/UltraTrailBoletos.png",
    tags: [
      TAGS.Node,
      TAGS.react,
      TAGS.Mysql,
      TAGS.Stripe,
      TAGS.Expo,
      TAGS.Postman,
      TAGS.SlimPHP,
    ],
  },

  {
    title: "App MusicForYou",
    description:
      "Desarrollo de una aplicación móvil llamada MusicForYou enfocada en la creación y gestión de contenido musical. Utilicé React Native para desarrollar la interfaz y Slim PHP para crear una API que gestiona las operaciones del backend. Los usuarios pueden registrarse y autenticarse, lo que les permite crear y gestionar sus propias canciones, letras, artistas y géneros musicales. La aplicación ofrece una experiencia intuitiva con navegación sencilla, facilitando la gestión musical personalizada. MySQL se utilizó para el almacenamiento de los datos, mientras que Postman fue clave para probar y documentar las APIs creadas, garantizando una integración efectiva entre el frontend y el backend.",
    github: "https://github.com/Nefta11/AppMusicForYou",
    image:
      "https://raw.githubusercontent.com/Nefta11/my-portfolio/main/public/images/projects/MusicForYou.png",
    tags: [TAGS.Node, TAGS.react, TAGS.Mysql, TAGS.SlimPHP, TAGS.Postman],
  },

  {
    title: "Gran Bazar",
    description:
      "Desarrollé esta aplicación web como parte de un proyecto integrador universitario, utilizando tecnologías como PHP, HTML, CSS, JavaScript y MySQL para el desarrollo tanto del frontend como del backend, sin el uso de frameworks. Además, diseñé y configuré la base de datos, incorporando procedimientos almacenados, funciones y vistas para la simulación y gestión de los datos. La aplicación incluye funcionalidades clave como el registro y acceso de usuarios, un carrito de compras para la visualización de productos seleccionados, y la opción de cerrar sesión de manera segura",
    github: "https://github.com/Nefta11/Gran_Bazar",
    image:
      "https://raw.githubusercontent.com/Nefta11/my-portfolio/main/public/images/projects/GranBazar.png",
    tags: [TAGS.Php, TAGS.Html, TAGS.JavaScript, TAGS.css, TAGS.Mysql],
  },
];
---

<section class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="bg-transparent rounded-xl shadow-lg border border-gray-800 p-8">
        <h3 class="text-2xl font-semibold text-purple-400 mb-2">{title}</h3>
        <p class="text-white text-sm md:text-lg mb-4 text-pretty">
          {description}
        </p>
        <ul class="flex flex-wrap gap-x-2 mb-4">
          {tags.map((tag) => (
            <li class="mb-2">
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-3`}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

        <img
          class="rounded-xl shadow-2xl shadow-purple-900 mb-6"
          src={image}
          alt={`Captura de pantalla del proyecto ${title}`}
        />
        <footer class="flex gap-x-4 items-end justify-start mt-4">
          {github && (
            <LinkButton class="text-white" href={github} target="_blank">
              <GitHubIcon class="size-4 md:size-6 text-white" />
              <span class="text-white">Ver código</span>
            </LinkButton>
          )}
          {link && (
            <LinkButton class="text-white" href={link} target="_blank">
              <LinkIcon class="size-4 md:size-6 text-white" />
              <span class="text-white">Ir al sitio</span>
            </LinkButton>
          )}
        </footer>
      </article>
    ))
  }
</section>
